-- autogenerated from asteroid.png
library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity asteroid_sprite is
    port(
		clk : in std_logic;
        x : in unsigned(4 downto 0); -- 0 to 31
        y : in unsigned(4 downto 0); -- 0 to 31
        
        rgb : out std_logic_vector(5 downto 0)
    );
end asteroid_sprite;

architecture synth of asteroid_sprite is

signal ymul : unsigned(10 downto 0);
signal linear_position : unsigned(10 downto 0);

signal color_index : unsigned(1 downto 0);

begin
    ymul <= y * 6b"100000";
    linear_position <= x + ymul; -- 0 to 1023

    process(clk) begin
	if rising_edge(clk) then
        case linear_position(9 downto 0) is
			when 10x"00" => color_index <= 2d"0"; -- (0, 0, 0)
			when 10x"20" => color_index <= 2d"0"; -- (0, 1, 0)
			when 10x"40" => color_index <= 2d"0"; -- (0, 2, 0)
			when 10x"60" => color_index <= 2d"0"; -- (0, 3, 0)
			when 10x"80" => color_index <= 2d"0"; -- (0, 4, 0)
			when 10x"a0" => color_index <= 2d"0"; -- (0, 5, 0)
			when 10x"c0" => color_index <= 2d"0"; -- (0, 6, 0)
			when 10x"e0" => color_index <= 2d"0"; -- (0, 7, 0)
			when 10x"100" => color_index <= 2d"0"; -- (0, 8, 0)
			when 10x"120" => color_index <= 2d"0"; -- (0, 9, 0)
			when 10x"140" => color_index <= 2d"0"; -- (0, 10, 0)
			when 10x"160" => color_index <= 2d"0"; -- (0, 11, 0)
			when 10x"180" => color_index <= 2d"0"; -- (0, 12, 0)
			when 10x"1a0" => color_index <= 2d"0"; -- (0, 13, 0)
			when 10x"1c0" => color_index <= 2d"0"; -- (0, 14, 0)
			when 10x"1e0" => color_index <= 2d"0"; -- (0, 15, 0)
			when 10x"200" => color_index <= 2d"0"; -- (0, 16, 0)
			when 10x"220" => color_index <= 2d"0"; -- (0, 17, 0)
			when 10x"240" => color_index <= 2d"0"; -- (0, 18, 0)
			when 10x"260" => color_index <= 2d"0"; -- (0, 19, 0)
			when 10x"280" => color_index <= 2d"0"; -- (0, 20, 0)
			when 10x"2a0" => color_index <= 2d"0"; -- (0, 21, 0)
			when 10x"2c0" => color_index <= 2d"0"; -- (0, 22, 0)
			when 10x"2e0" => color_index <= 2d"0"; -- (0, 23, 0)
			when 10x"300" => color_index <= 2d"0"; -- (0, 24, 0)
			when 10x"320" => color_index <= 2d"0"; -- (0, 25, 0)
			when 10x"340" => color_index <= 2d"0"; -- (0, 26, 0)
			when 10x"360" => color_index <= 2d"0"; -- (0, 27, 0)
			when 10x"380" => color_index <= 2d"0"; -- (0, 28, 0)
			when 10x"3a0" => color_index <= 2d"0"; -- (0, 29, 0)
			when 10x"3c0" => color_index <= 2d"0"; -- (0, 30, 0)
			when 10x"3e0" => color_index <= 2d"0"; -- (0, 31, 0)
			when 10x"01" => color_index <= 2d"0"; -- (1, 0, 0)
			when 10x"21" => color_index <= 2d"0"; -- (1, 1, 0)
			when 10x"41" => color_index <= 2d"0"; -- (1, 2, 0)
			when 10x"61" => color_index <= 2d"0"; -- (1, 3, 0)
			when 10x"81" => color_index <= 2d"0"; -- (1, 4, 0)
			when 10x"a1" => color_index <= 2d"0"; -- (1, 5, 0)
			when 10x"c1" => color_index <= 2d"0"; -- (1, 6, 0)
			when 10x"e1" => color_index <= 2d"0"; -- (1, 7, 0)
			when 10x"101" => color_index <= 2d"0"; -- (1, 8, 0)
			when 10x"121" => color_index <= 2d"0"; -- (1, 9, 0)
			when 10x"141" => color_index <= 2d"0"; -- (1, 10, 0)
			when 10x"161" => color_index <= 2d"0"; -- (1, 11, 0)
			when 10x"181" => color_index <= 2d"0"; -- (1, 12, 0)
			when 10x"1a1" => color_index <= 2d"0"; -- (1, 13, 0)
			when 10x"1c1" => color_index <= 2d"0"; -- (1, 14, 0)
			when 10x"1e1" => color_index <= 2d"0"; -- (1, 15, 0)
			when 10x"201" => color_index <= 2d"0"; -- (1, 16, 0)
			when 10x"221" => color_index <= 2d"0"; -- (1, 17, 0)
			when 10x"241" => color_index <= 2d"0"; -- (1, 18, 0)
			when 10x"261" => color_index <= 2d"0"; -- (1, 19, 0)
			when 10x"281" => color_index <= 2d"0"; -- (1, 20, 0)
			when 10x"2a1" => color_index <= 2d"0"; -- (1, 21, 0)
			when 10x"2c1" => color_index <= 2d"0"; -- (1, 22, 0)
			when 10x"2e1" => color_index <= 2d"0"; -- (1, 23, 0)
			when 10x"301" => color_index <= 2d"0"; -- (1, 24, 0)
			when 10x"321" => color_index <= 2d"0"; -- (1, 25, 0)
			when 10x"341" => color_index <= 2d"0"; -- (1, 26, 0)
			when 10x"361" => color_index <= 2d"0"; -- (1, 27, 0)
			when 10x"381" => color_index <= 2d"0"; -- (1, 28, 0)
			when 10x"3a1" => color_index <= 2d"0"; -- (1, 29, 0)
			when 10x"3c1" => color_index <= 2d"0"; -- (1, 30, 0)
			when 10x"3e1" => color_index <= 2d"0"; -- (1, 31, 0)
			when 10x"02" => color_index <= 2d"0"; -- (2, 0, 0)
			when 10x"22" => color_index <= 2d"0"; -- (2, 1, 0)
			when 10x"42" => color_index <= 2d"0"; -- (2, 2, 0)
			when 10x"62" => color_index <= 2d"0"; -- (2, 3, 0)
			when 10x"82" => color_index <= 2d"0"; -- (2, 4, 0)
			when 10x"a2" => color_index <= 2d"0"; -- (2, 5, 0)
			when 10x"c2" => color_index <= 2d"0"; -- (2, 6, 0)
			when 10x"e2" => color_index <= 2d"0"; -- (2, 7, 0)
			when 10x"102" => color_index <= 2d"0"; -- (2, 8, 0)
			when 10x"122" => color_index <= 2d"0"; -- (2, 9, 0)
			when 10x"142" => color_index <= 2d"0"; -- (2, 10, 0)
			when 10x"162" => color_index <= 2d"1"; -- (2, 11, 0)
			when 10x"182" => color_index <= 2d"1"; -- (2, 12, 0)
			when 10x"1a2" => color_index <= 2d"1"; -- (2, 13, 0)
			when 10x"1c2" => color_index <= 2d"1"; -- (2, 14, 0)
			when 10x"1e2" => color_index <= 2d"1"; -- (2, 15, 0)
			when 10x"202" => color_index <= 2d"1"; -- (2, 16, 0)
			when 10x"222" => color_index <= 2d"1"; -- (2, 17, 0)
			when 10x"242" => color_index <= 2d"0"; -- (2, 18, 0)
			when 10x"262" => color_index <= 2d"0"; -- (2, 19, 0)
			when 10x"282" => color_index <= 2d"0"; -- (2, 20, 0)
			when 10x"2a2" => color_index <= 2d"0"; -- (2, 21, 0)
			when 10x"2c2" => color_index <= 2d"0"; -- (2, 22, 0)
			when 10x"2e2" => color_index <= 2d"0"; -- (2, 23, 0)
			when 10x"302" => color_index <= 2d"0"; -- (2, 24, 0)
			when 10x"322" => color_index <= 2d"0"; -- (2, 25, 0)
			when 10x"342" => color_index <= 2d"0"; -- (2, 26, 0)
			when 10x"362" => color_index <= 2d"0"; -- (2, 27, 0)
			when 10x"382" => color_index <= 2d"0"; -- (2, 28, 0)
			when 10x"3a2" => color_index <= 2d"0"; -- (2, 29, 0)
			when 10x"3c2" => color_index <= 2d"0"; -- (2, 30, 0)
			when 10x"3e2" => color_index <= 2d"0"; -- (2, 31, 0)
			when 10x"03" => color_index <= 2d"0"; -- (3, 0, 0)
			when 10x"23" => color_index <= 2d"0"; -- (3, 1, 0)
			when 10x"43" => color_index <= 2d"0"; -- (3, 2, 0)
			when 10x"63" => color_index <= 2d"0"; -- (3, 3, 0)
			when 10x"83" => color_index <= 2d"0"; -- (3, 4, 0)
			when 10x"a3" => color_index <= 2d"0"; -- (3, 5, 0)
			when 10x"c3" => color_index <= 2d"0"; -- (3, 6, 0)
			when 10x"e3" => color_index <= 2d"0"; -- (3, 7, 0)
			when 10x"103" => color_index <= 2d"0"; -- (3, 8, 0)
			when 10x"123" => color_index <= 2d"0"; -- (3, 9, 0)
			when 10x"143" => color_index <= 2d"1"; -- (3, 10, 0)
			when 10x"163" => color_index <= 2d"2"; -- (3, 11, 0)
			when 10x"183" => color_index <= 2d"2"; -- (3, 12, 0)
			when 10x"1a3" => color_index <= 2d"2"; -- (3, 13, 0)
			when 10x"1c3" => color_index <= 2d"2"; -- (3, 14, 0)
			when 10x"1e3" => color_index <= 2d"2"; -- (3, 15, 0)
			when 10x"203" => color_index <= 2d"2"; -- (3, 16, 0)
			when 10x"223" => color_index <= 2d"2"; -- (3, 17, 0)
			when 10x"243" => color_index <= 2d"1"; -- (3, 18, 0)
			when 10x"263" => color_index <= 2d"0"; -- (3, 19, 0)
			when 10x"283" => color_index <= 2d"0"; -- (3, 20, 0)
			when 10x"2a3" => color_index <= 2d"0"; -- (3, 21, 0)
			when 10x"2c3" => color_index <= 2d"0"; -- (3, 22, 0)
			when 10x"2e3" => color_index <= 2d"0"; -- (3, 23, 0)
			when 10x"303" => color_index <= 2d"0"; -- (3, 24, 0)
			when 10x"323" => color_index <= 2d"0"; -- (3, 25, 0)
			when 10x"343" => color_index <= 2d"0"; -- (3, 26, 0)
			when 10x"363" => color_index <= 2d"0"; -- (3, 27, 0)
			when 10x"383" => color_index <= 2d"0"; -- (3, 28, 0)
			when 10x"3a3" => color_index <= 2d"0"; -- (3, 29, 0)
			when 10x"3c3" => color_index <= 2d"0"; -- (3, 30, 0)
			when 10x"3e3" => color_index <= 2d"0"; -- (3, 31, 0)
			when 10x"04" => color_index <= 2d"0"; -- (4, 0, 0)
			when 10x"24" => color_index <= 2d"0"; -- (4, 1, 0)
			when 10x"44" => color_index <= 2d"0"; -- (4, 2, 0)
			when 10x"64" => color_index <= 2d"0"; -- (4, 3, 0)
			when 10x"84" => color_index <= 2d"0"; -- (4, 4, 0)
			when 10x"a4" => color_index <= 2d"0"; -- (4, 5, 0)
			when 10x"c4" => color_index <= 2d"0"; -- (4, 6, 0)
			when 10x"e4" => color_index <= 2d"0"; -- (4, 7, 0)
			when 10x"104" => color_index <= 2d"0"; -- (4, 8, 0)
			when 10x"124" => color_index <= 2d"0"; -- (4, 9, 0)
			when 10x"144" => color_index <= 2d"1"; -- (4, 10, 0)
			when 10x"164" => color_index <= 2d"2"; -- (4, 11, 0)
			when 10x"184" => color_index <= 2d"2"; -- (4, 12, 0)
			when 10x"1a4" => color_index <= 2d"2"; -- (4, 13, 0)
			when 10x"1c4" => color_index <= 2d"2"; -- (4, 14, 0)
			when 10x"1e4" => color_index <= 2d"2"; -- (4, 15, 0)
			when 10x"204" => color_index <= 2d"2"; -- (4, 16, 0)
			when 10x"224" => color_index <= 2d"2"; -- (4, 17, 0)
			when 10x"244" => color_index <= 2d"1"; -- (4, 18, 0)
			when 10x"264" => color_index <= 2d"0"; -- (4, 19, 0)
			when 10x"284" => color_index <= 2d"0"; -- (4, 20, 0)
			when 10x"2a4" => color_index <= 2d"0"; -- (4, 21, 0)
			when 10x"2c4" => color_index <= 2d"0"; -- (4, 22, 0)
			when 10x"2e4" => color_index <= 2d"0"; -- (4, 23, 0)
			when 10x"304" => color_index <= 2d"0"; -- (4, 24, 0)
			when 10x"324" => color_index <= 2d"0"; -- (4, 25, 0)
			when 10x"344" => color_index <= 2d"0"; -- (4, 26, 0)
			when 10x"364" => color_index <= 2d"0"; -- (4, 27, 0)
			when 10x"384" => color_index <= 2d"0"; -- (4, 28, 0)
			when 10x"3a4" => color_index <= 2d"0"; -- (4, 29, 0)
			when 10x"3c4" => color_index <= 2d"0"; -- (4, 30, 0)
			when 10x"3e4" => color_index <= 2d"0"; -- (4, 31, 0)
			when 10x"05" => color_index <= 2d"0"; -- (5, 0, 0)
			when 10x"25" => color_index <= 2d"0"; -- (5, 1, 0)
			when 10x"45" => color_index <= 2d"0"; -- (5, 2, 0)
			when 10x"65" => color_index <= 2d"0"; -- (5, 3, 0)
			when 10x"85" => color_index <= 2d"0"; -- (5, 4, 0)
			when 10x"a5" => color_index <= 2d"0"; -- (5, 5, 0)
			when 10x"c5" => color_index <= 2d"0"; -- (5, 6, 0)
			when 10x"e5" => color_index <= 2d"0"; -- (5, 7, 0)
			when 10x"105" => color_index <= 2d"0"; -- (5, 8, 0)
			when 10x"125" => color_index <= 2d"1"; -- (5, 9, 0)
			when 10x"145" => color_index <= 2d"2"; -- (5, 10, 0)
			when 10x"165" => color_index <= 2d"2"; -- (5, 11, 0)
			when 10x"185" => color_index <= 2d"2"; -- (5, 12, 0)
			when 10x"1a5" => color_index <= 2d"3"; -- (5, 13, 0)
			when 10x"1c5" => color_index <= 2d"3"; -- (5, 14, 0)
			when 10x"1e5" => color_index <= 2d"2"; -- (5, 15, 0)
			when 10x"205" => color_index <= 2d"2"; -- (5, 16, 0)
			when 10x"225" => color_index <= 2d"2"; -- (5, 17, 0)
			when 10x"245" => color_index <= 2d"2"; -- (5, 18, 0)
			when 10x"265" => color_index <= 2d"1"; -- (5, 19, 0)
			when 10x"285" => color_index <= 2d"0"; -- (5, 20, 0)
			when 10x"2a5" => color_index <= 2d"0"; -- (5, 21, 0)
			when 10x"2c5" => color_index <= 2d"0"; -- (5, 22, 0)
			when 10x"2e5" => color_index <= 2d"0"; -- (5, 23, 0)
			when 10x"305" => color_index <= 2d"0"; -- (5, 24, 0)
			when 10x"325" => color_index <= 2d"0"; -- (5, 25, 0)
			when 10x"345" => color_index <= 2d"0"; -- (5, 26, 0)
			when 10x"365" => color_index <= 2d"0"; -- (5, 27, 0)
			when 10x"385" => color_index <= 2d"0"; -- (5, 28, 0)
			when 10x"3a5" => color_index <= 2d"0"; -- (5, 29, 0)
			when 10x"3c5" => color_index <= 2d"0"; -- (5, 30, 0)
			when 10x"3e5" => color_index <= 2d"0"; -- (5, 31, 0)
			when 10x"06" => color_index <= 2d"0"; -- (6, 0, 0)
			when 10x"26" => color_index <= 2d"0"; -- (6, 1, 0)
			when 10x"46" => color_index <= 2d"0"; -- (6, 2, 0)
			when 10x"66" => color_index <= 2d"0"; -- (6, 3, 0)
			when 10x"86" => color_index <= 2d"0"; -- (6, 4, 0)
			when 10x"a6" => color_index <= 2d"0"; -- (6, 5, 0)
			when 10x"c6" => color_index <= 2d"0"; -- (6, 6, 0)
			when 10x"e6" => color_index <= 2d"0"; -- (6, 7, 0)
			when 10x"106" => color_index <= 2d"1"; -- (6, 8, 0)
			when 10x"126" => color_index <= 2d"2"; -- (6, 9, 0)
			when 10x"146" => color_index <= 2d"2"; -- (6, 10, 0)
			when 10x"166" => color_index <= 2d"2"; -- (6, 11, 0)
			when 10x"186" => color_index <= 2d"3"; -- (6, 12, 0)
			when 10x"1a6" => color_index <= 2d"2"; -- (6, 13, 0)
			when 10x"1c6" => color_index <= 2d"2"; -- (6, 14, 0)
			when 10x"1e6" => color_index <= 2d"3"; -- (6, 15, 0)
			when 10x"206" => color_index <= 2d"2"; -- (6, 16, 0)
			when 10x"226" => color_index <= 2d"2"; -- (6, 17, 0)
			when 10x"246" => color_index <= 2d"2"; -- (6, 18, 0)
			when 10x"266" => color_index <= 2d"2"; -- (6, 19, 0)
			when 10x"286" => color_index <= 2d"1"; -- (6, 20, 0)
			when 10x"2a6" => color_index <= 2d"0"; -- (6, 21, 0)
			when 10x"2c6" => color_index <= 2d"0"; -- (6, 22, 0)
			when 10x"2e6" => color_index <= 2d"0"; -- (6, 23, 0)
			when 10x"306" => color_index <= 2d"0"; -- (6, 24, 0)
			when 10x"326" => color_index <= 2d"0"; -- (6, 25, 0)
			when 10x"346" => color_index <= 2d"0"; -- (6, 26, 0)
			when 10x"366" => color_index <= 2d"0"; -- (6, 27, 0)
			when 10x"386" => color_index <= 2d"0"; -- (6, 28, 0)
			when 10x"3a6" => color_index <= 2d"0"; -- (6, 29, 0)
			when 10x"3c6" => color_index <= 2d"0"; -- (6, 30, 0)
			when 10x"3e6" => color_index <= 2d"0"; -- (6, 31, 0)
			when 10x"07" => color_index <= 2d"0"; -- (7, 0, 0)
			when 10x"27" => color_index <= 2d"0"; -- (7, 1, 0)
			when 10x"47" => color_index <= 2d"0"; -- (7, 2, 0)
			when 10x"67" => color_index <= 2d"0"; -- (7, 3, 0)
			when 10x"87" => color_index <= 2d"0"; -- (7, 4, 0)
			when 10x"a7" => color_index <= 2d"0"; -- (7, 5, 0)
			when 10x"c7" => color_index <= 2d"0"; -- (7, 6, 0)
			when 10x"e7" => color_index <= 2d"1"; -- (7, 7, 0)
			when 10x"107" => color_index <= 2d"2"; -- (7, 8, 0)
			when 10x"127" => color_index <= 2d"2"; -- (7, 9, 0)
			when 10x"147" => color_index <= 2d"2"; -- (7, 10, 0)
			when 10x"167" => color_index <= 2d"2"; -- (7, 11, 0)
			when 10x"187" => color_index <= 2d"3"; -- (7, 12, 0)
			when 10x"1a7" => color_index <= 2d"2"; -- (7, 13, 0)
			when 10x"1c7" => color_index <= 2d"1"; -- (7, 14, 0)
			when 10x"1e7" => color_index <= 2d"3"; -- (7, 15, 0)
			when 10x"207" => color_index <= 2d"2"; -- (7, 16, 0)
			when 10x"227" => color_index <= 2d"2"; -- (7, 17, 0)
			when 10x"247" => color_index <= 2d"2"; -- (7, 18, 0)
			when 10x"267" => color_index <= 2d"2"; -- (7, 19, 0)
			when 10x"287" => color_index <= 2d"2"; -- (7, 20, 0)
			when 10x"2a7" => color_index <= 2d"1"; -- (7, 21, 0)
			when 10x"2c7" => color_index <= 2d"0"; -- (7, 22, 0)
			when 10x"2e7" => color_index <= 2d"0"; -- (7, 23, 0)
			when 10x"307" => color_index <= 2d"0"; -- (7, 24, 0)
			when 10x"327" => color_index <= 2d"0"; -- (7, 25, 0)
			when 10x"347" => color_index <= 2d"0"; -- (7, 26, 0)
			when 10x"367" => color_index <= 2d"0"; -- (7, 27, 0)
			when 10x"387" => color_index <= 2d"0"; -- (7, 28, 0)
			when 10x"3a7" => color_index <= 2d"0"; -- (7, 29, 0)
			when 10x"3c7" => color_index <= 2d"0"; -- (7, 30, 0)
			when 10x"3e7" => color_index <= 2d"0"; -- (7, 31, 0)
			when 10x"08" => color_index <= 2d"0"; -- (8, 0, 0)
			when 10x"28" => color_index <= 2d"0"; -- (8, 1, 0)
			when 10x"48" => color_index <= 2d"0"; -- (8, 2, 0)
			when 10x"68" => color_index <= 2d"0"; -- (8, 3, 0)
			when 10x"88" => color_index <= 2d"0"; -- (8, 4, 0)
			when 10x"a8" => color_index <= 2d"0"; -- (8, 5, 0)
			when 10x"c8" => color_index <= 2d"0"; -- (8, 6, 0)
			when 10x"e8" => color_index <= 2d"1"; -- (8, 7, 0)
			when 10x"108" => color_index <= 2d"2"; -- (8, 8, 0)
			when 10x"128" => color_index <= 2d"2"; -- (8, 9, 0)
			when 10x"148" => color_index <= 2d"2"; -- (8, 10, 0)
			when 10x"168" => color_index <= 2d"2"; -- (8, 11, 0)
			when 10x"188" => color_index <= 2d"2"; -- (8, 12, 0)
			when 10x"1a8" => color_index <= 2d"3"; -- (8, 13, 0)
			when 10x"1c8" => color_index <= 2d"3"; -- (8, 14, 0)
			when 10x"1e8" => color_index <= 2d"2"; -- (8, 15, 0)
			when 10x"208" => color_index <= 2d"2"; -- (8, 16, 0)
			when 10x"228" => color_index <= 2d"2"; -- (8, 17, 0)
			when 10x"248" => color_index <= 2d"2"; -- (8, 18, 0)
			when 10x"268" => color_index <= 2d"2"; -- (8, 19, 0)
			when 10x"288" => color_index <= 2d"2"; -- (8, 20, 0)
			when 10x"2a8" => color_index <= 2d"1"; -- (8, 21, 0)
			when 10x"2c8" => color_index <= 2d"0"; -- (8, 22, 0)
			when 10x"2e8" => color_index <= 2d"0"; -- (8, 23, 0)
			when 10x"308" => color_index <= 2d"0"; -- (8, 24, 0)
			when 10x"328" => color_index <= 2d"0"; -- (8, 25, 0)
			when 10x"348" => color_index <= 2d"0"; -- (8, 26, 0)
			when 10x"368" => color_index <= 2d"0"; -- (8, 27, 0)
			when 10x"388" => color_index <= 2d"0"; -- (8, 28, 0)
			when 10x"3a8" => color_index <= 2d"0"; -- (8, 29, 0)
			when 10x"3c8" => color_index <= 2d"0"; -- (8, 30, 0)
			when 10x"3e8" => color_index <= 2d"0"; -- (8, 31, 0)
			when 10x"09" => color_index <= 2d"0"; -- (9, 0, 0)
			when 10x"29" => color_index <= 2d"0"; -- (9, 1, 0)
			when 10x"49" => color_index <= 2d"0"; -- (9, 2, 0)
			when 10x"69" => color_index <= 2d"0"; -- (9, 3, 0)
			when 10x"89" => color_index <= 2d"0"; -- (9, 4, 0)
			when 10x"a9" => color_index <= 2d"0"; -- (9, 5, 0)
			when 10x"c9" => color_index <= 2d"0"; -- (9, 6, 0)
			when 10x"e9" => color_index <= 2d"1"; -- (9, 7, 0)
			when 10x"109" => color_index <= 2d"2"; -- (9, 8, 0)
			when 10x"129" => color_index <= 2d"2"; -- (9, 9, 0)
			when 10x"149" => color_index <= 2d"2"; -- (9, 10, 0)
			when 10x"169" => color_index <= 2d"2"; -- (9, 11, 0)
			when 10x"189" => color_index <= 2d"2"; -- (9, 12, 0)
			when 10x"1a9" => color_index <= 2d"2"; -- (9, 13, 0)
			when 10x"1c9" => color_index <= 2d"2"; -- (9, 14, 0)
			when 10x"1e9" => color_index <= 2d"2"; -- (9, 15, 0)
			when 10x"209" => color_index <= 2d"2"; -- (9, 16, 0)
			when 10x"229" => color_index <= 2d"2"; -- (9, 17, 0)
			when 10x"249" => color_index <= 2d"2"; -- (9, 18, 0)
			when 10x"269" => color_index <= 2d"2"; -- (9, 19, 0)
			when 10x"289" => color_index <= 2d"2"; -- (9, 20, 0)
			when 10x"2a9" => color_index <= 2d"1"; -- (9, 21, 0)
			when 10x"2c9" => color_index <= 2d"0"; -- (9, 22, 0)
			when 10x"2e9" => color_index <= 2d"0"; -- (9, 23, 0)
			when 10x"309" => color_index <= 2d"0"; -- (9, 24, 0)
			when 10x"329" => color_index <= 2d"0"; -- (9, 25, 0)
			when 10x"349" => color_index <= 2d"0"; -- (9, 26, 0)
			when 10x"369" => color_index <= 2d"0"; -- (9, 27, 0)
			when 10x"389" => color_index <= 2d"0"; -- (9, 28, 0)
			when 10x"3a9" => color_index <= 2d"0"; -- (9, 29, 0)
			when 10x"3c9" => color_index <= 2d"0"; -- (9, 30, 0)
			when 10x"3e9" => color_index <= 2d"0"; -- (9, 31, 0)
			when 10x"0a" => color_index <= 2d"0"; -- (10, 0, 0)
			when 10x"2a" => color_index <= 2d"0"; -- (10, 1, 0)
			when 10x"4a" => color_index <= 2d"0"; -- (10, 2, 0)
			when 10x"6a" => color_index <= 2d"0"; -- (10, 3, 0)
			when 10x"8a" => color_index <= 2d"0"; -- (10, 4, 0)
			when 10x"aa" => color_index <= 2d"0"; -- (10, 5, 0)
			when 10x"ca" => color_index <= 2d"1"; -- (10, 6, 0)
			when 10x"ea" => color_index <= 2d"2"; -- (10, 7, 0)
			when 10x"10a" => color_index <= 2d"2"; -- (10, 8, 0)
			when 10x"12a" => color_index <= 2d"2"; -- (10, 9, 0)
			when 10x"14a" => color_index <= 2d"2"; -- (10, 10, 0)
			when 10x"16a" => color_index <= 2d"2"; -- (10, 11, 0)
			when 10x"18a" => color_index <= 2d"2"; -- (10, 12, 0)
			when 10x"1aa" => color_index <= 2d"2"; -- (10, 13, 0)
			when 10x"1ca" => color_index <= 2d"2"; -- (10, 14, 0)
			when 10x"1ea" => color_index <= 2d"2"; -- (10, 15, 0)
			when 10x"20a" => color_index <= 2d"2"; -- (10, 16, 0)
			when 10x"22a" => color_index <= 2d"2"; -- (10, 17, 0)
			when 10x"24a" => color_index <= 2d"2"; -- (10, 18, 0)
			when 10x"26a" => color_index <= 2d"2"; -- (10, 19, 0)
			when 10x"28a" => color_index <= 2d"2"; -- (10, 20, 0)
			when 10x"2aa" => color_index <= 2d"2"; -- (10, 21, 0)
			when 10x"2ca" => color_index <= 2d"1"; -- (10, 22, 0)
			when 10x"2ea" => color_index <= 2d"0"; -- (10, 23, 0)
			when 10x"30a" => color_index <= 2d"0"; -- (10, 24, 0)
			when 10x"32a" => color_index <= 2d"0"; -- (10, 25, 0)
			when 10x"34a" => color_index <= 2d"0"; -- (10, 26, 0)
			when 10x"36a" => color_index <= 2d"0"; -- (10, 27, 0)
			when 10x"38a" => color_index <= 2d"0"; -- (10, 28, 0)
			when 10x"3aa" => color_index <= 2d"0"; -- (10, 29, 0)
			when 10x"3ca" => color_index <= 2d"0"; -- (10, 30, 0)
			when 10x"3ea" => color_index <= 2d"0"; -- (10, 31, 0)
			when 10x"0b" => color_index <= 2d"0"; -- (11, 0, 0)
			when 10x"2b" => color_index <= 2d"0"; -- (11, 1, 0)
			when 10x"4b" => color_index <= 2d"0"; -- (11, 2, 0)
			when 10x"6b" => color_index <= 2d"0"; -- (11, 3, 0)
			when 10x"8b" => color_index <= 2d"0"; -- (11, 4, 0)
			when 10x"ab" => color_index <= 2d"0"; -- (11, 5, 0)
			when 10x"cb" => color_index <= 2d"1"; -- (11, 6, 0)
			when 10x"eb" => color_index <= 2d"2"; -- (11, 7, 0)
			when 10x"10b" => color_index <= 2d"2"; -- (11, 8, 0)
			when 10x"12b" => color_index <= 2d"2"; -- (11, 9, 0)
			when 10x"14b" => color_index <= 2d"2"; -- (11, 10, 0)
			when 10x"16b" => color_index <= 2d"2"; -- (11, 11, 0)
			when 10x"18b" => color_index <= 2d"2"; -- (11, 12, 0)
			when 10x"1ab" => color_index <= 2d"2"; -- (11, 13, 0)
			when 10x"1cb" => color_index <= 2d"2"; -- (11, 14, 0)
			when 10x"1eb" => color_index <= 2d"2"; -- (11, 15, 0)
			when 10x"20b" => color_index <= 2d"2"; -- (11, 16, 0)
			when 10x"22b" => color_index <= 2d"2"; -- (11, 17, 0)
			when 10x"24b" => color_index <= 2d"2"; -- (11, 18, 0)
			when 10x"26b" => color_index <= 2d"2"; -- (11, 19, 0)
			when 10x"28b" => color_index <= 2d"2"; -- (11, 20, 0)
			when 10x"2ab" => color_index <= 2d"2"; -- (11, 21, 0)
			when 10x"2cb" => color_index <= 2d"2"; -- (11, 22, 0)
			when 10x"2eb" => color_index <= 2d"1"; -- (11, 23, 0)
			when 10x"30b" => color_index <= 2d"0"; -- (11, 24, 0)
			when 10x"32b" => color_index <= 2d"0"; -- (11, 25, 0)
			when 10x"34b" => color_index <= 2d"0"; -- (11, 26, 0)
			when 10x"36b" => color_index <= 2d"0"; -- (11, 27, 0)
			when 10x"38b" => color_index <= 2d"0"; -- (11, 28, 0)
			when 10x"3ab" => color_index <= 2d"0"; -- (11, 29, 0)
			when 10x"3cb" => color_index <= 2d"0"; -- (11, 30, 0)
			when 10x"3eb" => color_index <= 2d"0"; -- (11, 31, 0)
			when 10x"0c" => color_index <= 2d"0"; -- (12, 0, 0)
			when 10x"2c" => color_index <= 2d"0"; -- (12, 1, 0)
			when 10x"4c" => color_index <= 2d"0"; -- (12, 2, 0)
			when 10x"6c" => color_index <= 2d"0"; -- (12, 3, 0)
			when 10x"8c" => color_index <= 2d"0"; -- (12, 4, 0)
			when 10x"ac" => color_index <= 2d"0"; -- (12, 5, 0)
			when 10x"cc" => color_index <= 2d"1"; -- (12, 6, 0)
			when 10x"ec" => color_index <= 2d"2"; -- (12, 7, 0)
			when 10x"10c" => color_index <= 2d"2"; -- (12, 8, 0)
			when 10x"12c" => color_index <= 2d"2"; -- (12, 9, 0)
			when 10x"14c" => color_index <= 2d"2"; -- (12, 10, 0)
			when 10x"16c" => color_index <= 2d"2"; -- (12, 11, 0)
			when 10x"18c" => color_index <= 2d"2"; -- (12, 12, 0)
			when 10x"1ac" => color_index <= 2d"2"; -- (12, 13, 0)
			when 10x"1cc" => color_index <= 2d"2"; -- (12, 14, 0)
			when 10x"1ec" => color_index <= 2d"2"; -- (12, 15, 0)
			when 10x"20c" => color_index <= 2d"2"; -- (12, 16, 0)
			when 10x"22c" => color_index <= 2d"2"; -- (12, 17, 0)
			when 10x"24c" => color_index <= 2d"2"; -- (12, 18, 0)
			when 10x"26c" => color_index <= 2d"2"; -- (12, 19, 0)
			when 10x"28c" => color_index <= 2d"2"; -- (12, 20, 0)
			when 10x"2ac" => color_index <= 2d"2"; -- (12, 21, 0)
			when 10x"2cc" => color_index <= 2d"2"; -- (12, 22, 0)
			when 10x"2ec" => color_index <= 2d"1"; -- (12, 23, 0)
			when 10x"30c" => color_index <= 2d"0"; -- (12, 24, 0)
			when 10x"32c" => color_index <= 2d"0"; -- (12, 25, 0)
			when 10x"34c" => color_index <= 2d"0"; -- (12, 26, 0)
			when 10x"36c" => color_index <= 2d"0"; -- (12, 27, 0)
			when 10x"38c" => color_index <= 2d"0"; -- (12, 28, 0)
			when 10x"3ac" => color_index <= 2d"0"; -- (12, 29, 0)
			when 10x"3cc" => color_index <= 2d"0"; -- (12, 30, 0)
			when 10x"3ec" => color_index <= 2d"0"; -- (12, 31, 0)
			when 10x"0d" => color_index <= 2d"0"; -- (13, 0, 0)
			when 10x"2d" => color_index <= 2d"0"; -- (13, 1, 0)
			when 10x"4d" => color_index <= 2d"0"; -- (13, 2, 0)
			when 10x"6d" => color_index <= 2d"0"; -- (13, 3, 0)
			when 10x"8d" => color_index <= 2d"0"; -- (13, 4, 0)
			when 10x"ad" => color_index <= 2d"0"; -- (13, 5, 0)
			when 10x"cd" => color_index <= 2d"1"; -- (13, 6, 0)
			when 10x"ed" => color_index <= 2d"2"; -- (13, 7, 0)
			when 10x"10d" => color_index <= 2d"2"; -- (13, 8, 0)
			when 10x"12d" => color_index <= 2d"2"; -- (13, 9, 0)
			when 10x"14d" => color_index <= 2d"2"; -- (13, 10, 0)
			when 10x"16d" => color_index <= 2d"2"; -- (13, 11, 0)
			when 10x"18d" => color_index <= 2d"3"; -- (13, 12, 0)
			when 10x"1ad" => color_index <= 2d"3"; -- (13, 13, 0)
			when 10x"1cd" => color_index <= 2d"2"; -- (13, 14, 0)
			when 10x"1ed" => color_index <= 2d"2"; -- (13, 15, 0)
			when 10x"20d" => color_index <= 2d"2"; -- (13, 16, 0)
			when 10x"22d" => color_index <= 2d"2"; -- (13, 17, 0)
			when 10x"24d" => color_index <= 2d"2"; -- (13, 18, 0)
			when 10x"26d" => color_index <= 2d"2"; -- (13, 19, 0)
			when 10x"28d" => color_index <= 2d"2"; -- (13, 20, 0)
			when 10x"2ad" => color_index <= 2d"2"; -- (13, 21, 0)
			when 10x"2cd" => color_index <= 2d"2"; -- (13, 22, 0)
			when 10x"2ed" => color_index <= 2d"1"; -- (13, 23, 0)
			when 10x"30d" => color_index <= 2d"0"; -- (13, 24, 0)
			when 10x"32d" => color_index <= 2d"0"; -- (13, 25, 0)
			when 10x"34d" => color_index <= 2d"0"; -- (13, 26, 0)
			when 10x"36d" => color_index <= 2d"0"; -- (13, 27, 0)
			when 10x"38d" => color_index <= 2d"0"; -- (13, 28, 0)
			when 10x"3ad" => color_index <= 2d"0"; -- (13, 29, 0)
			when 10x"3cd" => color_index <= 2d"0"; -- (13, 30, 0)
			when 10x"3ed" => color_index <= 2d"0"; -- (13, 31, 0)
			when 10x"0e" => color_index <= 2d"0"; -- (14, 0, 0)
			when 10x"2e" => color_index <= 2d"0"; -- (14, 1, 0)
			when 10x"4e" => color_index <= 2d"0"; -- (14, 2, 0)
			when 10x"6e" => color_index <= 2d"0"; -- (14, 3, 0)
			when 10x"8e" => color_index <= 2d"0"; -- (14, 4, 0)
			when 10x"ae" => color_index <= 2d"0"; -- (14, 5, 0)
			when 10x"ce" => color_index <= 2d"1"; -- (14, 6, 0)
			when 10x"ee" => color_index <= 2d"2"; -- (14, 7, 0)
			when 10x"10e" => color_index <= 2d"2"; -- (14, 8, 0)
			when 10x"12e" => color_index <= 2d"2"; -- (14, 9, 0)
			when 10x"14e" => color_index <= 2d"2"; -- (14, 10, 0)
			when 10x"16e" => color_index <= 2d"3"; -- (14, 11, 0)
			when 10x"18e" => color_index <= 2d"2"; -- (14, 12, 0)
			when 10x"1ae" => color_index <= 2d"2"; -- (14, 13, 0)
			when 10x"1ce" => color_index <= 2d"3"; -- (14, 14, 0)
			when 10x"1ee" => color_index <= 2d"2"; -- (14, 15, 0)
			when 10x"20e" => color_index <= 2d"2"; -- (14, 16, 0)
			when 10x"22e" => color_index <= 2d"2"; -- (14, 17, 0)
			when 10x"24e" => color_index <= 2d"2"; -- (14, 18, 0)
			when 10x"26e" => color_index <= 2d"2"; -- (14, 19, 0)
			when 10x"28e" => color_index <= 2d"3"; -- (14, 20, 0)
			when 10x"2ae" => color_index <= 2d"2"; -- (14, 21, 0)
			when 10x"2ce" => color_index <= 2d"2"; -- (14, 22, 0)
			when 10x"2ee" => color_index <= 2d"1"; -- (14, 23, 0)
			when 10x"30e" => color_index <= 2d"0"; -- (14, 24, 0)
			when 10x"32e" => color_index <= 2d"0"; -- (14, 25, 0)
			when 10x"34e" => color_index <= 2d"0"; -- (14, 26, 0)
			when 10x"36e" => color_index <= 2d"0"; -- (14, 27, 0)
			when 10x"38e" => color_index <= 2d"0"; -- (14, 28, 0)
			when 10x"3ae" => color_index <= 2d"0"; -- (14, 29, 0)
			when 10x"3ce" => color_index <= 2d"0"; -- (14, 30, 0)
			when 10x"3ee" => color_index <= 2d"0"; -- (14, 31, 0)
			when 10x"0f" => color_index <= 2d"0"; -- (15, 0, 0)
			when 10x"2f" => color_index <= 2d"0"; -- (15, 1, 0)
			when 10x"4f" => color_index <= 2d"0"; -- (15, 2, 0)
			when 10x"6f" => color_index <= 2d"0"; -- (15, 3, 0)
			when 10x"8f" => color_index <= 2d"0"; -- (15, 4, 0)
			when 10x"af" => color_index <= 2d"0"; -- (15, 5, 0)
			when 10x"cf" => color_index <= 2d"1"; -- (15, 6, 0)
			when 10x"ef" => color_index <= 2d"2"; -- (15, 7, 0)
			when 10x"10f" => color_index <= 2d"2"; -- (15, 8, 0)
			when 10x"12f" => color_index <= 2d"2"; -- (15, 9, 0)
			when 10x"14f" => color_index <= 2d"3"; -- (15, 10, 0)
			when 10x"16f" => color_index <= 2d"2"; -- (15, 11, 0)
			when 10x"18f" => color_index <= 2d"2"; -- (15, 12, 0)
			when 10x"1af" => color_index <= 2d"2"; -- (15, 13, 0)
			when 10x"1cf" => color_index <= 2d"2"; -- (15, 14, 0)
			when 10x"1ef" => color_index <= 2d"3"; -- (15, 15, 0)
			when 10x"20f" => color_index <= 2d"2"; -- (15, 16, 0)
			when 10x"22f" => color_index <= 2d"2"; -- (15, 17, 0)
			when 10x"24f" => color_index <= 2d"2"; -- (15, 18, 0)
			when 10x"26f" => color_index <= 2d"3"; -- (15, 19, 0)
			when 10x"28f" => color_index <= 2d"2"; -- (15, 20, 0)
			when 10x"2af" => color_index <= 2d"3"; -- (15, 21, 0)
			when 10x"2cf" => color_index <= 2d"2"; -- (15, 22, 0)
			when 10x"2ef" => color_index <= 2d"1"; -- (15, 23, 0)
			when 10x"30f" => color_index <= 2d"0"; -- (15, 24, 0)
			when 10x"32f" => color_index <= 2d"0"; -- (15, 25, 0)
			when 10x"34f" => color_index <= 2d"0"; -- (15, 26, 0)
			when 10x"36f" => color_index <= 2d"0"; -- (15, 27, 0)
			when 10x"38f" => color_index <= 2d"0"; -- (15, 28, 0)
			when 10x"3af" => color_index <= 2d"0"; -- (15, 29, 0)
			when 10x"3cf" => color_index <= 2d"0"; -- (15, 30, 0)
			when 10x"3ef" => color_index <= 2d"0"; -- (15, 31, 0)
			when 10x"10" => color_index <= 2d"0"; -- (16, 0, 0)
			when 10x"30" => color_index <= 2d"0"; -- (16, 1, 0)
			when 10x"50" => color_index <= 2d"0"; -- (16, 2, 0)
			when 10x"70" => color_index <= 2d"0"; -- (16, 3, 0)
			when 10x"90" => color_index <= 2d"0"; -- (16, 4, 0)
			when 10x"b0" => color_index <= 2d"0"; -- (16, 5, 0)
			when 10x"d0" => color_index <= 2d"1"; -- (16, 6, 0)
			when 10x"f0" => color_index <= 2d"2"; -- (16, 7, 0)
			when 10x"110" => color_index <= 2d"2"; -- (16, 8, 0)
			when 10x"130" => color_index <= 2d"2"; -- (16, 9, 0)
			when 10x"150" => color_index <= 2d"3"; -- (16, 10, 0)
			when 10x"170" => color_index <= 2d"2"; -- (16, 11, 0)
			when 10x"190" => color_index <= 2d"2"; -- (16, 12, 0)
			when 10x"1b0" => color_index <= 2d"2"; -- (16, 13, 0)
			when 10x"1d0" => color_index <= 2d"1"; -- (16, 14, 0)
			when 10x"1f0" => color_index <= 2d"3"; -- (16, 15, 0)
			when 10x"210" => color_index <= 2d"2"; -- (16, 16, 0)
			when 10x"230" => color_index <= 2d"2"; -- (16, 17, 0)
			when 10x"250" => color_index <= 2d"2"; -- (16, 18, 0)
			when 10x"270" => color_index <= 2d"3"; -- (16, 19, 0)
			when 10x"290" => color_index <= 2d"2"; -- (16, 20, 0)
			when 10x"2b0" => color_index <= 2d"3"; -- (16, 21, 0)
			when 10x"2d0" => color_index <= 2d"2"; -- (16, 22, 0)
			when 10x"2f0" => color_index <= 2d"1"; -- (16, 23, 0)
			when 10x"310" => color_index <= 2d"0"; -- (16, 24, 0)
			when 10x"330" => color_index <= 2d"0"; -- (16, 25, 0)
			when 10x"350" => color_index <= 2d"0"; -- (16, 26, 0)
			when 10x"370" => color_index <= 2d"0"; -- (16, 27, 0)
			when 10x"390" => color_index <= 2d"0"; -- (16, 28, 0)
			when 10x"3b0" => color_index <= 2d"0"; -- (16, 29, 0)
			when 10x"3d0" => color_index <= 2d"0"; -- (16, 30, 0)
			when 10x"3f0" => color_index <= 2d"0"; -- (16, 31, 0)
			when 10x"11" => color_index <= 2d"0"; -- (17, 0, 0)
			when 10x"31" => color_index <= 2d"0"; -- (17, 1, 0)
			when 10x"51" => color_index <= 2d"0"; -- (17, 2, 0)
			when 10x"71" => color_index <= 2d"0"; -- (17, 3, 0)
			when 10x"91" => color_index <= 2d"0"; -- (17, 4, 0)
			when 10x"b1" => color_index <= 2d"0"; -- (17, 5, 0)
			when 10x"d1" => color_index <= 2d"1"; -- (17, 6, 0)
			when 10x"f1" => color_index <= 2d"2"; -- (17, 7, 0)
			when 10x"111" => color_index <= 2d"2"; -- (17, 8, 0)
			when 10x"131" => color_index <= 2d"2"; -- (17, 9, 0)
			when 10x"151" => color_index <= 2d"3"; -- (17, 10, 0)
			when 10x"171" => color_index <= 2d"2"; -- (17, 11, 0)
			when 10x"191" => color_index <= 2d"2"; -- (17, 12, 0)
			when 10x"1b1" => color_index <= 2d"2"; -- (17, 13, 0)
			when 10x"1d1" => color_index <= 2d"1"; -- (17, 14, 0)
			when 10x"1f1" => color_index <= 2d"3"; -- (17, 15, 0)
			when 10x"211" => color_index <= 2d"2"; -- (17, 16, 0)
			when 10x"231" => color_index <= 2d"2"; -- (17, 17, 0)
			when 10x"251" => color_index <= 2d"2"; -- (17, 18, 0)
			when 10x"271" => color_index <= 2d"3"; -- (17, 19, 0)
			when 10x"291" => color_index <= 2d"2"; -- (17, 20, 0)
			when 10x"2b1" => color_index <= 2d"3"; -- (17, 21, 0)
			when 10x"2d1" => color_index <= 2d"2"; -- (17, 22, 0)
			when 10x"2f1" => color_index <= 2d"1"; -- (17, 23, 0)
			when 10x"311" => color_index <= 2d"0"; -- (17, 24, 0)
			when 10x"331" => color_index <= 2d"0"; -- (17, 25, 0)
			when 10x"351" => color_index <= 2d"0"; -- (17, 26, 0)
			when 10x"371" => color_index <= 2d"0"; -- (17, 27, 0)
			when 10x"391" => color_index <= 2d"0"; -- (17, 28, 0)
			when 10x"3b1" => color_index <= 2d"0"; -- (17, 29, 0)
			when 10x"3d1" => color_index <= 2d"0"; -- (17, 30, 0)
			when 10x"3f1" => color_index <= 2d"0"; -- (17, 31, 0)
			when 10x"12" => color_index <= 2d"0"; -- (18, 0, 0)
			when 10x"32" => color_index <= 2d"0"; -- (18, 1, 0)
			when 10x"52" => color_index <= 2d"0"; -- (18, 2, 0)
			when 10x"72" => color_index <= 2d"0"; -- (18, 3, 0)
			when 10x"92" => color_index <= 2d"0"; -- (18, 4, 0)
			when 10x"b2" => color_index <= 2d"0"; -- (18, 5, 0)
			when 10x"d2" => color_index <= 2d"1"; -- (18, 6, 0)
			when 10x"f2" => color_index <= 2d"2"; -- (18, 7, 0)
			when 10x"112" => color_index <= 2d"2"; -- (18, 8, 0)
			when 10x"132" => color_index <= 2d"2"; -- (18, 9, 0)
			when 10x"152" => color_index <= 2d"3"; -- (18, 10, 0)
			when 10x"172" => color_index <= 2d"2"; -- (18, 11, 0)
			when 10x"192" => color_index <= 2d"2"; -- (18, 12, 0)
			when 10x"1b2" => color_index <= 2d"1"; -- (18, 13, 0)
			when 10x"1d2" => color_index <= 2d"1"; -- (18, 14, 0)
			when 10x"1f2" => color_index <= 2d"3"; -- (18, 15, 0)
			when 10x"212" => color_index <= 2d"2"; -- (18, 16, 0)
			when 10x"232" => color_index <= 2d"2"; -- (18, 17, 0)
			when 10x"252" => color_index <= 2d"2"; -- (18, 18, 0)
			when 10x"272" => color_index <= 2d"2"; -- (18, 19, 0)
			when 10x"292" => color_index <= 2d"3"; -- (18, 20, 0)
			when 10x"2b2" => color_index <= 2d"2"; -- (18, 21, 0)
			when 10x"2d2" => color_index <= 2d"2"; -- (18, 22, 0)
			when 10x"2f2" => color_index <= 2d"1"; -- (18, 23, 0)
			when 10x"312" => color_index <= 2d"0"; -- (18, 24, 0)
			when 10x"332" => color_index <= 2d"0"; -- (18, 25, 0)
			when 10x"352" => color_index <= 2d"0"; -- (18, 26, 0)
			when 10x"372" => color_index <= 2d"0"; -- (18, 27, 0)
			when 10x"392" => color_index <= 2d"0"; -- (18, 28, 0)
			when 10x"3b2" => color_index <= 2d"0"; -- (18, 29, 0)
			when 10x"3d2" => color_index <= 2d"0"; -- (18, 30, 0)
			when 10x"3f2" => color_index <= 2d"0"; -- (18, 31, 0)
			when 10x"13" => color_index <= 2d"0"; -- (19, 0, 0)
			when 10x"33" => color_index <= 2d"0"; -- (19, 1, 0)
			when 10x"53" => color_index <= 2d"0"; -- (19, 2, 0)
			when 10x"73" => color_index <= 2d"0"; -- (19, 3, 0)
			when 10x"93" => color_index <= 2d"0"; -- (19, 4, 0)
			when 10x"b3" => color_index <= 2d"0"; -- (19, 5, 0)
			when 10x"d3" => color_index <= 2d"0"; -- (19, 6, 0)
			when 10x"f3" => color_index <= 2d"1"; -- (19, 7, 0)
			when 10x"113" => color_index <= 2d"2"; -- (19, 8, 0)
			when 10x"133" => color_index <= 2d"2"; -- (19, 9, 0)
			when 10x"153" => color_index <= 2d"2"; -- (19, 10, 0)
			when 10x"173" => color_index <= 2d"3"; -- (19, 11, 0)
			when 10x"193" => color_index <= 2d"1"; -- (19, 12, 0)
			when 10x"1b3" => color_index <= 2d"1"; -- (19, 13, 0)
			when 10x"1d3" => color_index <= 2d"3"; -- (19, 14, 0)
			when 10x"1f3" => color_index <= 2d"2"; -- (19, 15, 0)
			when 10x"213" => color_index <= 2d"2"; -- (19, 16, 0)
			when 10x"233" => color_index <= 2d"2"; -- (19, 17, 0)
			when 10x"253" => color_index <= 2d"2"; -- (19, 18, 0)
			when 10x"273" => color_index <= 2d"2"; -- (19, 19, 0)
			when 10x"293" => color_index <= 2d"2"; -- (19, 20, 0)
			when 10x"2b3" => color_index <= 2d"2"; -- (19, 21, 0)
			when 10x"2d3" => color_index <= 2d"2"; -- (19, 22, 0)
			when 10x"2f3" => color_index <= 2d"1"; -- (19, 23, 0)
			when 10x"313" => color_index <= 2d"0"; -- (19, 24, 0)
			when 10x"333" => color_index <= 2d"0"; -- (19, 25, 0)
			when 10x"353" => color_index <= 2d"0"; -- (19, 26, 0)
			when 10x"373" => color_index <= 2d"0"; -- (19, 27, 0)
			when 10x"393" => color_index <= 2d"0"; -- (19, 28, 0)
			when 10x"3b3" => color_index <= 2d"0"; -- (19, 29, 0)
			when 10x"3d3" => color_index <= 2d"0"; -- (19, 30, 0)
			when 10x"3f3" => color_index <= 2d"0"; -- (19, 31, 0)
			when 10x"14" => color_index <= 2d"0"; -- (20, 0, 0)
			when 10x"34" => color_index <= 2d"0"; -- (20, 1, 0)
			when 10x"54" => color_index <= 2d"0"; -- (20, 2, 0)
			when 10x"74" => color_index <= 2d"0"; -- (20, 3, 0)
			when 10x"94" => color_index <= 2d"0"; -- (20, 4, 0)
			when 10x"b4" => color_index <= 2d"0"; -- (20, 5, 0)
			when 10x"d4" => color_index <= 2d"0"; -- (20, 6, 0)
			when 10x"f4" => color_index <= 2d"1"; -- (20, 7, 0)
			when 10x"114" => color_index <= 2d"2"; -- (20, 8, 0)
			when 10x"134" => color_index <= 2d"2"; -- (20, 9, 0)
			when 10x"154" => color_index <= 2d"2"; -- (20, 10, 0)
			when 10x"174" => color_index <= 2d"2"; -- (20, 11, 0)
			when 10x"194" => color_index <= 2d"3"; -- (20, 12, 0)
			when 10x"1b4" => color_index <= 2d"3"; -- (20, 13, 0)
			when 10x"1d4" => color_index <= 2d"2"; -- (20, 14, 0)
			when 10x"1f4" => color_index <= 2d"2"; -- (20, 15, 0)
			when 10x"214" => color_index <= 2d"2"; -- (20, 16, 0)
			when 10x"234" => color_index <= 2d"2"; -- (20, 17, 0)
			when 10x"254" => color_index <= 2d"2"; -- (20, 18, 0)
			when 10x"274" => color_index <= 2d"2"; -- (20, 19, 0)
			when 10x"294" => color_index <= 2d"2"; -- (20, 20, 0)
			when 10x"2b4" => color_index <= 2d"2"; -- (20, 21, 0)
			when 10x"2d4" => color_index <= 2d"1"; -- (20, 22, 0)
			when 10x"2f4" => color_index <= 2d"0"; -- (20, 23, 0)
			when 10x"314" => color_index <= 2d"0"; -- (20, 24, 0)
			when 10x"334" => color_index <= 2d"0"; -- (20, 25, 0)
			when 10x"354" => color_index <= 2d"0"; -- (20, 26, 0)
			when 10x"374" => color_index <= 2d"0"; -- (20, 27, 0)
			when 10x"394" => color_index <= 2d"0"; -- (20, 28, 0)
			when 10x"3b4" => color_index <= 2d"0"; -- (20, 29, 0)
			when 10x"3d4" => color_index <= 2d"0"; -- (20, 30, 0)
			when 10x"3f4" => color_index <= 2d"0"; -- (20, 31, 0)
			when 10x"15" => color_index <= 2d"0"; -- (21, 0, 0)
			when 10x"35" => color_index <= 2d"0"; -- (21, 1, 0)
			when 10x"55" => color_index <= 2d"0"; -- (21, 2, 0)
			when 10x"75" => color_index <= 2d"0"; -- (21, 3, 0)
			when 10x"95" => color_index <= 2d"0"; -- (21, 4, 0)
			when 10x"b5" => color_index <= 2d"0"; -- (21, 5, 0)
			when 10x"d5" => color_index <= 2d"0"; -- (21, 6, 0)
			when 10x"f5" => color_index <= 2d"1"; -- (21, 7, 0)
			when 10x"115" => color_index <= 2d"2"; -- (21, 8, 0)
			when 10x"135" => color_index <= 2d"2"; -- (21, 9, 0)
			when 10x"155" => color_index <= 2d"2"; -- (21, 10, 0)
			when 10x"175" => color_index <= 2d"2"; -- (21, 11, 0)
			when 10x"195" => color_index <= 2d"2"; -- (21, 12, 0)
			when 10x"1b5" => color_index <= 2d"2"; -- (21, 13, 0)
			when 10x"1d5" => color_index <= 2d"2"; -- (21, 14, 0)
			when 10x"1f5" => color_index <= 2d"2"; -- (21, 15, 0)
			when 10x"215" => color_index <= 2d"2"; -- (21, 16, 0)
			when 10x"235" => color_index <= 2d"2"; -- (21, 17, 0)
			when 10x"255" => color_index <= 2d"2"; -- (21, 18, 0)
			when 10x"275" => color_index <= 2d"2"; -- (21, 19, 0)
			when 10x"295" => color_index <= 2d"2"; -- (21, 20, 0)
			when 10x"2b5" => color_index <= 2d"1"; -- (21, 21, 0)
			when 10x"2d5" => color_index <= 2d"0"; -- (21, 22, 0)
			when 10x"2f5" => color_index <= 2d"0"; -- (21, 23, 0)
			when 10x"315" => color_index <= 2d"0"; -- (21, 24, 0)
			when 10x"335" => color_index <= 2d"0"; -- (21, 25, 0)
			when 10x"355" => color_index <= 2d"0"; -- (21, 26, 0)
			when 10x"375" => color_index <= 2d"0"; -- (21, 27, 0)
			when 10x"395" => color_index <= 2d"0"; -- (21, 28, 0)
			when 10x"3b5" => color_index <= 2d"0"; -- (21, 29, 0)
			when 10x"3d5" => color_index <= 2d"0"; -- (21, 30, 0)
			when 10x"3f5" => color_index <= 2d"0"; -- (21, 31, 0)
			when 10x"16" => color_index <= 2d"0"; -- (22, 0, 0)
			when 10x"36" => color_index <= 2d"0"; -- (22, 1, 0)
			when 10x"56" => color_index <= 2d"0"; -- (22, 2, 0)
			when 10x"76" => color_index <= 2d"0"; -- (22, 3, 0)
			when 10x"96" => color_index <= 2d"0"; -- (22, 4, 0)
			when 10x"b6" => color_index <= 2d"0"; -- (22, 5, 0)
			when 10x"d6" => color_index <= 2d"0"; -- (22, 6, 0)
			when 10x"f6" => color_index <= 2d"0"; -- (22, 7, 0)
			when 10x"116" => color_index <= 2d"1"; -- (22, 8, 0)
			when 10x"136" => color_index <= 2d"2"; -- (22, 9, 0)
			when 10x"156" => color_index <= 2d"2"; -- (22, 10, 0)
			when 10x"176" => color_index <= 2d"2"; -- (22, 11, 0)
			when 10x"196" => color_index <= 2d"2"; -- (22, 12, 0)
			when 10x"1b6" => color_index <= 2d"2"; -- (22, 13, 0)
			when 10x"1d6" => color_index <= 2d"3"; -- (22, 14, 0)
			when 10x"1f6" => color_index <= 2d"3"; -- (22, 15, 0)
			when 10x"216" => color_index <= 2d"2"; -- (22, 16, 0)
			when 10x"236" => color_index <= 2d"2"; -- (22, 17, 0)
			when 10x"256" => color_index <= 2d"2"; -- (22, 18, 0)
			when 10x"276" => color_index <= 2d"2"; -- (22, 19, 0)
			when 10x"296" => color_index <= 2d"2"; -- (22, 20, 0)
			when 10x"2b6" => color_index <= 2d"1"; -- (22, 21, 0)
			when 10x"2d6" => color_index <= 2d"0"; -- (22, 22, 0)
			when 10x"2f6" => color_index <= 2d"0"; -- (22, 23, 0)
			when 10x"316" => color_index <= 2d"0"; -- (22, 24, 0)
			when 10x"336" => color_index <= 2d"0"; -- (22, 25, 0)
			when 10x"356" => color_index <= 2d"0"; -- (22, 26, 0)
			when 10x"376" => color_index <= 2d"0"; -- (22, 27, 0)
			when 10x"396" => color_index <= 2d"0"; -- (22, 28, 0)
			when 10x"3b6" => color_index <= 2d"0"; -- (22, 29, 0)
			when 10x"3d6" => color_index <= 2d"0"; -- (22, 30, 0)
			when 10x"3f6" => color_index <= 2d"0"; -- (22, 31, 0)
			when 10x"17" => color_index <= 2d"0"; -- (23, 0, 0)
			when 10x"37" => color_index <= 2d"0"; -- (23, 1, 0)
			when 10x"57" => color_index <= 2d"0"; -- (23, 2, 0)
			when 10x"77" => color_index <= 2d"0"; -- (23, 3, 0)
			when 10x"97" => color_index <= 2d"0"; -- (23, 4, 0)
			when 10x"b7" => color_index <= 2d"0"; -- (23, 5, 0)
			when 10x"d7" => color_index <= 2d"0"; -- (23, 6, 0)
			when 10x"f7" => color_index <= 2d"0"; -- (23, 7, 0)
			when 10x"117" => color_index <= 2d"0"; -- (23, 8, 0)
			when 10x"137" => color_index <= 2d"1"; -- (23, 9, 0)
			when 10x"157" => color_index <= 2d"2"; -- (23, 10, 0)
			when 10x"177" => color_index <= 2d"2"; -- (23, 11, 0)
			when 10x"197" => color_index <= 2d"2"; -- (23, 12, 0)
			when 10x"1b7" => color_index <= 2d"3"; -- (23, 13, 0)
			when 10x"1d7" => color_index <= 2d"2"; -- (23, 14, 0)
			when 10x"1f7" => color_index <= 2d"2"; -- (23, 15, 0)
			when 10x"217" => color_index <= 2d"3"; -- (23, 16, 0)
			when 10x"237" => color_index <= 2d"2"; -- (23, 17, 0)
			when 10x"257" => color_index <= 2d"2"; -- (23, 18, 0)
			when 10x"277" => color_index <= 2d"2"; -- (23, 19, 0)
			when 10x"297" => color_index <= 2d"1"; -- (23, 20, 0)
			when 10x"2b7" => color_index <= 2d"0"; -- (23, 21, 0)
			when 10x"2d7" => color_index <= 2d"0"; -- (23, 22, 0)
			when 10x"2f7" => color_index <= 2d"0"; -- (23, 23, 0)
			when 10x"317" => color_index <= 2d"0"; -- (23, 24, 0)
			when 10x"337" => color_index <= 2d"0"; -- (23, 25, 0)
			when 10x"357" => color_index <= 2d"0"; -- (23, 26, 0)
			when 10x"377" => color_index <= 2d"0"; -- (23, 27, 0)
			when 10x"397" => color_index <= 2d"0"; -- (23, 28, 0)
			when 10x"3b7" => color_index <= 2d"0"; -- (23, 29, 0)
			when 10x"3d7" => color_index <= 2d"0"; -- (23, 30, 0)
			when 10x"3f7" => color_index <= 2d"0"; -- (23, 31, 0)
			when 10x"18" => color_index <= 2d"0"; -- (24, 0, 0)
			when 10x"38" => color_index <= 2d"0"; -- (24, 1, 0)
			when 10x"58" => color_index <= 2d"0"; -- (24, 2, 0)
			when 10x"78" => color_index <= 2d"0"; -- (24, 3, 0)
			when 10x"98" => color_index <= 2d"0"; -- (24, 4, 0)
			when 10x"b8" => color_index <= 2d"0"; -- (24, 5, 0)
			when 10x"d8" => color_index <= 2d"0"; -- (24, 6, 0)
			when 10x"f8" => color_index <= 2d"0"; -- (24, 7, 0)
			when 10x"118" => color_index <= 2d"0"; -- (24, 8, 0)
			when 10x"138" => color_index <= 2d"1"; -- (24, 9, 0)
			when 10x"158" => color_index <= 2d"2"; -- (24, 10, 0)
			when 10x"178" => color_index <= 2d"2"; -- (24, 11, 0)
			when 10x"198" => color_index <= 2d"2"; -- (24, 12, 0)
			when 10x"1b8" => color_index <= 2d"3"; -- (24, 13, 0)
			when 10x"1d8" => color_index <= 2d"2"; -- (24, 14, 0)
			when 10x"1f8" => color_index <= 2d"1"; -- (24, 15, 0)
			when 10x"218" => color_index <= 2d"3"; -- (24, 16, 0)
			when 10x"238" => color_index <= 2d"2"; -- (24, 17, 0)
			when 10x"258" => color_index <= 2d"2"; -- (24, 18, 0)
			when 10x"278" => color_index <= 2d"1"; -- (24, 19, 0)
			when 10x"298" => color_index <= 2d"0"; -- (24, 20, 0)
			when 10x"2b8" => color_index <= 2d"0"; -- (24, 21, 0)
			when 10x"2d8" => color_index <= 2d"0"; -- (24, 22, 0)
			when 10x"2f8" => color_index <= 2d"0"; -- (24, 23, 0)
			when 10x"318" => color_index <= 2d"0"; -- (24, 24, 0)
			when 10x"338" => color_index <= 2d"0"; -- (24, 25, 0)
			when 10x"358" => color_index <= 2d"0"; -- (24, 26, 0)
			when 10x"378" => color_index <= 2d"0"; -- (24, 27, 0)
			when 10x"398" => color_index <= 2d"0"; -- (24, 28, 0)
			when 10x"3b8" => color_index <= 2d"0"; -- (24, 29, 0)
			when 10x"3d8" => color_index <= 2d"0"; -- (24, 30, 0)
			when 10x"3f8" => color_index <= 2d"0"; -- (24, 31, 0)
			when 10x"19" => color_index <= 2d"0"; -- (25, 0, 0)
			when 10x"39" => color_index <= 2d"0"; -- (25, 1, 0)
			when 10x"59" => color_index <= 2d"0"; -- (25, 2, 0)
			when 10x"79" => color_index <= 2d"0"; -- (25, 3, 0)
			when 10x"99" => color_index <= 2d"0"; -- (25, 4, 0)
			when 10x"b9" => color_index <= 2d"0"; -- (25, 5, 0)
			when 10x"d9" => color_index <= 2d"0"; -- (25, 6, 0)
			when 10x"f9" => color_index <= 2d"0"; -- (25, 7, 0)
			when 10x"119" => color_index <= 2d"0"; -- (25, 8, 0)
			when 10x"139" => color_index <= 2d"1"; -- (25, 9, 0)
			when 10x"159" => color_index <= 2d"2"; -- (25, 10, 0)
			when 10x"179" => color_index <= 2d"2"; -- (25, 11, 0)
			when 10x"199" => color_index <= 2d"2"; -- (25, 12, 0)
			when 10x"1b9" => color_index <= 2d"2"; -- (25, 13, 0)
			when 10x"1d9" => color_index <= 2d"3"; -- (25, 14, 0)
			when 10x"1f9" => color_index <= 2d"3"; -- (25, 15, 0)
			when 10x"219" => color_index <= 2d"2"; -- (25, 16, 0)
			when 10x"239" => color_index <= 2d"2"; -- (25, 17, 0)
			when 10x"259" => color_index <= 2d"1"; -- (25, 18, 0)
			when 10x"279" => color_index <= 2d"0"; -- (25, 19, 0)
			when 10x"299" => color_index <= 2d"0"; -- (25, 20, 0)
			when 10x"2b9" => color_index <= 2d"0"; -- (25, 21, 0)
			when 10x"2d9" => color_index <= 2d"0"; -- (25, 22, 0)
			when 10x"2f9" => color_index <= 2d"0"; -- (25, 23, 0)
			when 10x"319" => color_index <= 2d"0"; -- (25, 24, 0)
			when 10x"339" => color_index <= 2d"0"; -- (25, 25, 0)
			when 10x"359" => color_index <= 2d"0"; -- (25, 26, 0)
			when 10x"379" => color_index <= 2d"0"; -- (25, 27, 0)
			when 10x"399" => color_index <= 2d"0"; -- (25, 28, 0)
			when 10x"3b9" => color_index <= 2d"0"; -- (25, 29, 0)
			when 10x"3d9" => color_index <= 2d"0"; -- (25, 30, 0)
			when 10x"3f9" => color_index <= 2d"0"; -- (25, 31, 0)
			when 10x"1a" => color_index <= 2d"0"; -- (26, 0, 0)
			when 10x"3a" => color_index <= 2d"0"; -- (26, 1, 0)
			when 10x"5a" => color_index <= 2d"0"; -- (26, 2, 0)
			when 10x"7a" => color_index <= 2d"0"; -- (26, 3, 0)
			when 10x"9a" => color_index <= 2d"0"; -- (26, 4, 0)
			when 10x"ba" => color_index <= 2d"0"; -- (26, 5, 0)
			when 10x"da" => color_index <= 2d"0"; -- (26, 6, 0)
			when 10x"fa" => color_index <= 2d"0"; -- (26, 7, 0)
			when 10x"11a" => color_index <= 2d"0"; -- (26, 8, 0)
			when 10x"13a" => color_index <= 2d"0"; -- (26, 9, 0)
			when 10x"15a" => color_index <= 2d"1"; -- (26, 10, 0)
			when 10x"17a" => color_index <= 2d"2"; -- (26, 11, 0)
			when 10x"19a" => color_index <= 2d"2"; -- (26, 12, 0)
			when 10x"1ba" => color_index <= 2d"2"; -- (26, 13, 0)
			when 10x"1da" => color_index <= 2d"2"; -- (26, 14, 0)
			when 10x"1fa" => color_index <= 2d"2"; -- (26, 15, 0)
			when 10x"21a" => color_index <= 2d"2"; -- (26, 16, 0)
			when 10x"23a" => color_index <= 2d"2"; -- (26, 17, 0)
			when 10x"25a" => color_index <= 2d"1"; -- (26, 18, 0)
			when 10x"27a" => color_index <= 2d"0"; -- (26, 19, 0)
			when 10x"29a" => color_index <= 2d"0"; -- (26, 20, 0)
			when 10x"2ba" => color_index <= 2d"0"; -- (26, 21, 0)
			when 10x"2da" => color_index <= 2d"0"; -- (26, 22, 0)
			when 10x"2fa" => color_index <= 2d"0"; -- (26, 23, 0)
			when 10x"31a" => color_index <= 2d"0"; -- (26, 24, 0)
			when 10x"33a" => color_index <= 2d"0"; -- (26, 25, 0)
			when 10x"35a" => color_index <= 2d"0"; -- (26, 26, 0)
			when 10x"37a" => color_index <= 2d"0"; -- (26, 27, 0)
			when 10x"39a" => color_index <= 2d"0"; -- (26, 28, 0)
			when 10x"3ba" => color_index <= 2d"0"; -- (26, 29, 0)
			when 10x"3da" => color_index <= 2d"0"; -- (26, 30, 0)
			when 10x"3fa" => color_index <= 2d"0"; -- (26, 31, 0)
			when 10x"1b" => color_index <= 2d"0"; -- (27, 0, 0)
			when 10x"3b" => color_index <= 2d"0"; -- (27, 1, 0)
			when 10x"5b" => color_index <= 2d"0"; -- (27, 2, 0)
			when 10x"7b" => color_index <= 2d"0"; -- (27, 3, 0)
			when 10x"9b" => color_index <= 2d"0"; -- (27, 4, 0)
			when 10x"bb" => color_index <= 2d"0"; -- (27, 5, 0)
			when 10x"db" => color_index <= 2d"0"; -- (27, 6, 0)
			when 10x"fb" => color_index <= 2d"0"; -- (27, 7, 0)
			when 10x"11b" => color_index <= 2d"0"; -- (27, 8, 0)
			when 10x"13b" => color_index <= 2d"0"; -- (27, 9, 0)
			when 10x"15b" => color_index <= 2d"0"; -- (27, 10, 0)
			when 10x"17b" => color_index <= 2d"1"; -- (27, 11, 0)
			when 10x"19b" => color_index <= 2d"2"; -- (27, 12, 0)
			when 10x"1bb" => color_index <= 2d"2"; -- (27, 13, 0)
			when 10x"1db" => color_index <= 2d"2"; -- (27, 14, 0)
			when 10x"1fb" => color_index <= 2d"2"; -- (27, 15, 0)
			when 10x"21b" => color_index <= 2d"2"; -- (27, 16, 0)
			when 10x"23b" => color_index <= 2d"2"; -- (27, 17, 0)
			when 10x"25b" => color_index <= 2d"1"; -- (27, 18, 0)
			when 10x"27b" => color_index <= 2d"0"; -- (27, 19, 0)
			when 10x"29b" => color_index <= 2d"0"; -- (27, 20, 0)
			when 10x"2bb" => color_index <= 2d"0"; -- (27, 21, 0)
			when 10x"2db" => color_index <= 2d"0"; -- (27, 22, 0)
			when 10x"2fb" => color_index <= 2d"0"; -- (27, 23, 0)
			when 10x"31b" => color_index <= 2d"0"; -- (27, 24, 0)
			when 10x"33b" => color_index <= 2d"0"; -- (27, 25, 0)
			when 10x"35b" => color_index <= 2d"0"; -- (27, 26, 0)
			when 10x"37b" => color_index <= 2d"0"; -- (27, 27, 0)
			when 10x"39b" => color_index <= 2d"0"; -- (27, 28, 0)
			when 10x"3bb" => color_index <= 2d"0"; -- (27, 29, 0)
			when 10x"3db" => color_index <= 2d"0"; -- (27, 30, 0)
			when 10x"3fb" => color_index <= 2d"0"; -- (27, 31, 0)
			when 10x"1c" => color_index <= 2d"0"; -- (28, 0, 0)
			when 10x"3c" => color_index <= 2d"0"; -- (28, 1, 0)
			when 10x"5c" => color_index <= 2d"0"; -- (28, 2, 0)
			when 10x"7c" => color_index <= 2d"0"; -- (28, 3, 0)
			when 10x"9c" => color_index <= 2d"0"; -- (28, 4, 0)
			when 10x"bc" => color_index <= 2d"0"; -- (28, 5, 0)
			when 10x"dc" => color_index <= 2d"0"; -- (28, 6, 0)
			when 10x"fc" => color_index <= 2d"0"; -- (28, 7, 0)
			when 10x"11c" => color_index <= 2d"0"; -- (28, 8, 0)
			when 10x"13c" => color_index <= 2d"0"; -- (28, 9, 0)
			when 10x"15c" => color_index <= 2d"0"; -- (28, 10, 0)
			when 10x"17c" => color_index <= 2d"0"; -- (28, 11, 0)
			when 10x"19c" => color_index <= 2d"1"; -- (28, 12, 0)
			when 10x"1bc" => color_index <= 2d"2"; -- (28, 13, 0)
			when 10x"1dc" => color_index <= 2d"2"; -- (28, 14, 0)
			when 10x"1fc" => color_index <= 2d"2"; -- (28, 15, 0)
			when 10x"21c" => color_index <= 2d"2"; -- (28, 16, 0)
			when 10x"23c" => color_index <= 2d"1"; -- (28, 17, 0)
			when 10x"25c" => color_index <= 2d"0"; -- (28, 18, 0)
			when 10x"27c" => color_index <= 2d"0"; -- (28, 19, 0)
			when 10x"29c" => color_index <= 2d"0"; -- (28, 20, 0)
			when 10x"2bc" => color_index <= 2d"0"; -- (28, 21, 0)
			when 10x"2dc" => color_index <= 2d"0"; -- (28, 22, 0)
			when 10x"2fc" => color_index <= 2d"0"; -- (28, 23, 0)
			when 10x"31c" => color_index <= 2d"0"; -- (28, 24, 0)
			when 10x"33c" => color_index <= 2d"0"; -- (28, 25, 0)
			when 10x"35c" => color_index <= 2d"0"; -- (28, 26, 0)
			when 10x"37c" => color_index <= 2d"0"; -- (28, 27, 0)
			when 10x"39c" => color_index <= 2d"0"; -- (28, 28, 0)
			when 10x"3bc" => color_index <= 2d"0"; -- (28, 29, 0)
			when 10x"3dc" => color_index <= 2d"0"; -- (28, 30, 0)
			when 10x"3fc" => color_index <= 2d"0"; -- (28, 31, 0)
			when 10x"1d" => color_index <= 2d"0"; -- (29, 0, 0)
			when 10x"3d" => color_index <= 2d"0"; -- (29, 1, 0)
			when 10x"5d" => color_index <= 2d"0"; -- (29, 2, 0)
			when 10x"7d" => color_index <= 2d"0"; -- (29, 3, 0)
			when 10x"9d" => color_index <= 2d"0"; -- (29, 4, 0)
			when 10x"bd" => color_index <= 2d"0"; -- (29, 5, 0)
			when 10x"dd" => color_index <= 2d"0"; -- (29, 6, 0)
			when 10x"fd" => color_index <= 2d"0"; -- (29, 7, 0)
			when 10x"11d" => color_index <= 2d"0"; -- (29, 8, 0)
			when 10x"13d" => color_index <= 2d"0"; -- (29, 9, 0)
			when 10x"15d" => color_index <= 2d"0"; -- (29, 10, 0)
			when 10x"17d" => color_index <= 2d"0"; -- (29, 11, 0)
			when 10x"19d" => color_index <= 2d"0"; -- (29, 12, 0)
			when 10x"1bd" => color_index <= 2d"1"; -- (29, 13, 0)
			when 10x"1dd" => color_index <= 2d"1"; -- (29, 14, 0)
			when 10x"1fd" => color_index <= 2d"1"; -- (29, 15, 0)
			when 10x"21d" => color_index <= 2d"1"; -- (29, 16, 0)
			when 10x"23d" => color_index <= 2d"0"; -- (29, 17, 0)
			when 10x"25d" => color_index <= 2d"0"; -- (29, 18, 0)
			when 10x"27d" => color_index <= 2d"0"; -- (29, 19, 0)
			when 10x"29d" => color_index <= 2d"0"; -- (29, 20, 0)
			when 10x"2bd" => color_index <= 2d"0"; -- (29, 21, 0)
			when 10x"2dd" => color_index <= 2d"0"; -- (29, 22, 0)
			when 10x"2fd" => color_index <= 2d"0"; -- (29, 23, 0)
			when 10x"31d" => color_index <= 2d"0"; -- (29, 24, 0)
			when 10x"33d" => color_index <= 2d"0"; -- (29, 25, 0)
			when 10x"35d" => color_index <= 2d"0"; -- (29, 26, 0)
			when 10x"37d" => color_index <= 2d"0"; -- (29, 27, 0)
			when 10x"39d" => color_index <= 2d"0"; -- (29, 28, 0)
			when 10x"3bd" => color_index <= 2d"0"; -- (29, 29, 0)
			when 10x"3dd" => color_index <= 2d"0"; -- (29, 30, 0)
			when 10x"3fd" => color_index <= 2d"0"; -- (29, 31, 0)
			when 10x"1e" => color_index <= 2d"0"; -- (30, 0, 0)
			when 10x"3e" => color_index <= 2d"0"; -- (30, 1, 0)
			when 10x"5e" => color_index <= 2d"0"; -- (30, 2, 0)
			when 10x"7e" => color_index <= 2d"0"; -- (30, 3, 0)
			when 10x"9e" => color_index <= 2d"0"; -- (30, 4, 0)
			when 10x"be" => color_index <= 2d"0"; -- (30, 5, 0)
			when 10x"de" => color_index <= 2d"0"; -- (30, 6, 0)
			when 10x"fe" => color_index <= 2d"0"; -- (30, 7, 0)
			when 10x"11e" => color_index <= 2d"0"; -- (30, 8, 0)
			when 10x"13e" => color_index <= 2d"0"; -- (30, 9, 0)
			when 10x"15e" => color_index <= 2d"0"; -- (30, 10, 0)
			when 10x"17e" => color_index <= 2d"0"; -- (30, 11, 0)
			when 10x"19e" => color_index <= 2d"0"; -- (30, 12, 0)
			when 10x"1be" => color_index <= 2d"0"; -- (30, 13, 0)
			when 10x"1de" => color_index <= 2d"0"; -- (30, 14, 0)
			when 10x"1fe" => color_index <= 2d"0"; -- (30, 15, 0)
			when 10x"21e" => color_index <= 2d"0"; -- (30, 16, 0)
			when 10x"23e" => color_index <= 2d"0"; -- (30, 17, 0)
			when 10x"25e" => color_index <= 2d"0"; -- (30, 18, 0)
			when 10x"27e" => color_index <= 2d"0"; -- (30, 19, 0)
			when 10x"29e" => color_index <= 2d"0"; -- (30, 20, 0)
			when 10x"2be" => color_index <= 2d"0"; -- (30, 21, 0)
			when 10x"2de" => color_index <= 2d"0"; -- (30, 22, 0)
			when 10x"2fe" => color_index <= 2d"0"; -- (30, 23, 0)
			when 10x"31e" => color_index <= 2d"0"; -- (30, 24, 0)
			when 10x"33e" => color_index <= 2d"0"; -- (30, 25, 0)
			when 10x"35e" => color_index <= 2d"0"; -- (30, 26, 0)
			when 10x"37e" => color_index <= 2d"0"; -- (30, 27, 0)
			when 10x"39e" => color_index <= 2d"0"; -- (30, 28, 0)
			when 10x"3be" => color_index <= 2d"0"; -- (30, 29, 0)
			when 10x"3de" => color_index <= 2d"0"; -- (30, 30, 0)
			when 10x"3fe" => color_index <= 2d"0"; -- (30, 31, 0)
			when 10x"1f" => color_index <= 2d"0"; -- (31, 0, 0)
			when 10x"3f" => color_index <= 2d"0"; -- (31, 1, 0)
			when 10x"5f" => color_index <= 2d"0"; -- (31, 2, 0)
			when 10x"7f" => color_index <= 2d"0"; -- (31, 3, 0)
			when 10x"9f" => color_index <= 2d"0"; -- (31, 4, 0)
			when 10x"bf" => color_index <= 2d"0"; -- (31, 5, 0)
			when 10x"df" => color_index <= 2d"0"; -- (31, 6, 0)
			when 10x"ff" => color_index <= 2d"0"; -- (31, 7, 0)
			when 10x"11f" => color_index <= 2d"0"; -- (31, 8, 0)
			when 10x"13f" => color_index <= 2d"0"; -- (31, 9, 0)
			when 10x"15f" => color_index <= 2d"0"; -- (31, 10, 0)
			when 10x"17f" => color_index <= 2d"0"; -- (31, 11, 0)
			when 10x"19f" => color_index <= 2d"0"; -- (31, 12, 0)
			when 10x"1bf" => color_index <= 2d"0"; -- (31, 13, 0)
			when 10x"1df" => color_index <= 2d"0"; -- (31, 14, 0)
			when 10x"1ff" => color_index <= 2d"0"; -- (31, 15, 0)
			when 10x"21f" => color_index <= 2d"0"; -- (31, 16, 0)
			when 10x"23f" => color_index <= 2d"0"; -- (31, 17, 0)
			when 10x"25f" => color_index <= 2d"0"; -- (31, 18, 0)
			when 10x"27f" => color_index <= 2d"0"; -- (31, 19, 0)
			when 10x"29f" => color_index <= 2d"0"; -- (31, 20, 0)
			when 10x"2bf" => color_index <= 2d"0"; -- (31, 21, 0)
			when 10x"2df" => color_index <= 2d"0"; -- (31, 22, 0)
			when 10x"2ff" => color_index <= 2d"0"; -- (31, 23, 0)
			when 10x"31f" => color_index <= 2d"0"; -- (31, 24, 0)
			when 10x"33f" => color_index <= 2d"0"; -- (31, 25, 0)
			when 10x"35f" => color_index <= 2d"0"; -- (31, 26, 0)
			when 10x"37f" => color_index <= 2d"0"; -- (31, 27, 0)
			when 10x"39f" => color_index <= 2d"0"; -- (31, 28, 0)
			when 10x"3bf" => color_index <= 2d"0"; -- (31, 29, 0)
			when 10x"3df" => color_index <= 2d"0"; -- (31, 30, 0)
			when 10x"3ff" => color_index <= 2d"0"; -- (31, 31, 0)
			when others => color_index <= 2d"0";
        end case;

        case color_index is
			when 2d"0" => rgb <= "000000";
			when 2d"1" => rgb <= "111111";
			when 2d"2" => rgb <= "101010";
			when 2d"3" => rgb <= "010101";
           when others => rgb <= "000000";
           end case;
	end if;
    end process;
end synth;
