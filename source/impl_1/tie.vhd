-- autogenerated from logos/tie.png
library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity tie_sprite is
    port(
		clk : in std_logic;
        x : in unsigned(4 downto 0); -- 0 to 17
        y : in unsigned(2 downto 0); -- 0 to 4
        
        rgb : out std_logic_vector(5 downto 0)
    );
end tie_sprite;

architecture synth of tie_sprite is

signal ymul : unsigned(7 downto 0);
signal linear_position : unsigned(8 downto 0);

signal color_index : unsigned(1 downto 0);

begin
    ymul <= y * 5b"10010";
    linear_position <= x + ("0" & ymul); -- 0 to 89

    process(clk) begin
		if rising_edge(clk) then
        case linear_position(6 downto 0) is
			when 7x"0" => color_index <= 2d"0"; -- (0, 0, 0)
			when 7x"12" => color_index <= 2d"1"; -- (0, 1, 0)
			when 7x"24" => color_index <= 2d"1"; -- (0, 2, 0)
			when 7x"36" => color_index <= 2d"1"; -- (0, 3, 0)
			when 7x"48" => color_index <= 2d"1"; -- (0, 4, 0)
			when 7x"1" => color_index <= 2d"0"; -- (1, 0, 0)
			when 7x"13" => color_index <= 2d"1"; -- (1, 1, 0)
			when 7x"25" => color_index <= 2d"1"; -- (1, 2, 0)
			when 7x"37" => color_index <= 2d"1"; -- (1, 3, 0)
			when 7x"49" => color_index <= 2d"1"; -- (1, 4, 0)
			when 7x"2" => color_index <= 2d"0"; -- (2, 0, 0)
			when 7x"14" => color_index <= 2d"0"; -- (2, 1, 0)
			when 7x"26" => color_index <= 2d"0"; -- (2, 2, 0)
			when 7x"38" => color_index <= 2d"0"; -- (2, 3, 0)
			when 7x"4a" => color_index <= 2d"0"; -- (2, 4, 0)
			when 7x"3" => color_index <= 2d"0"; -- (3, 0, 0)
			when 7x"15" => color_index <= 2d"2"; -- (3, 1, 0)
			when 7x"27" => color_index <= 2d"2"; -- (3, 2, 0)
			when 7x"39" => color_index <= 2d"2"; -- (3, 3, 0)
			when 7x"4b" => color_index <= 2d"2"; -- (3, 4, 0)
			when 7x"4" => color_index <= 2d"0"; -- (4, 0, 0)
			when 7x"16" => color_index <= 2d"1"; -- (4, 1, 0)
			when 7x"28" => color_index <= 2d"1"; -- (4, 2, 0)
			when 7x"3a" => color_index <= 2d"1"; -- (4, 3, 0)
			when 7x"4c" => color_index <= 2d"1"; -- (4, 4, 0)
			when 7x"5" => color_index <= 2d"2"; -- (5, 0, 0)
			when 7x"17" => color_index <= 2d"1"; -- (5, 1, 0)
			when 7x"29" => color_index <= 2d"1"; -- (5, 2, 0)
			when 7x"3b" => color_index <= 2d"1"; -- (5, 3, 0)
			when 7x"4d" => color_index <= 2d"1"; -- (5, 4, 0)
			when 7x"6" => color_index <= 2d"0"; -- (6, 0, 0)
			when 7x"18" => color_index <= 2d"1"; -- (6, 1, 0)
			when 7x"2a" => color_index <= 2d"1"; -- (6, 2, 0)
			when 7x"3c" => color_index <= 2d"1"; -- (6, 3, 0)
			when 7x"4e" => color_index <= 2d"0"; -- (6, 4, 0)
			when 7x"7" => color_index <= 2d"0"; -- (7, 0, 0)
			when 7x"19" => color_index <= 2d"0"; -- (7, 1, 0)
			when 7x"2b" => color_index <= 2d"0"; -- (7, 2, 0)
			when 7x"3d" => color_index <= 2d"0"; -- (7, 3, 0)
			when 7x"4f" => color_index <= 2d"0"; -- (7, 4, 0)
			when 7x"8" => color_index <= 2d"0"; -- (8, 0, 0)
			when 7x"1a" => color_index <= 2d"2"; -- (8, 1, 0)
			when 7x"2c" => color_index <= 2d"2"; -- (8, 2, 0)
			when 7x"3e" => color_index <= 2d"2"; -- (8, 3, 0)
			when 7x"50" => color_index <= 2d"0"; -- (8, 4, 0)
			when 7x"9" => color_index <= 2d"2"; -- (9, 0, 0)
			when 7x"1b" => color_index <= 2d"1"; -- (9, 1, 0)
			when 7x"2d" => color_index <= 2d"1"; -- (9, 2, 0)
			when 7x"3f" => color_index <= 2d"1"; -- (9, 3, 0)
			when 7x"51" => color_index <= 2d"2"; -- (9, 4, 0)
			when 7x"a" => color_index <= 2d"0"; -- (10, 0, 0)
			when 7x"1c" => color_index <= 2d"0"; -- (10, 1, 0)
			when 7x"2e" => color_index <= 2d"0"; -- (10, 2, 0)
			when 7x"40" => color_index <= 2d"0"; -- (10, 3, 0)
			when 7x"52" => color_index <= 2d"0"; -- (10, 4, 0)
			when 7x"b" => color_index <= 2d"0"; -- (11, 0, 0)
			when 7x"1d" => color_index <= 2d"2"; -- (11, 1, 0)
			when 7x"2f" => color_index <= 2d"0"; -- (11, 2, 0)
			when 7x"41" => color_index <= 2d"2"; -- (11, 3, 0)
			when 7x"53" => color_index <= 2d"0"; -- (11, 4, 0)
			when 7x"c" => color_index <= 2d"0"; -- (12, 0, 0)
			when 7x"1e" => color_index <= 2d"1"; -- (12, 1, 0)
			when 7x"30" => color_index <= 2d"0"; -- (12, 2, 0)
			when 7x"42" => color_index <= 2d"1"; -- (12, 3, 0)
			when 7x"54" => color_index <= 2d"0"; -- (12, 4, 0)
			when 7x"d" => color_index <= 2d"0"; -- (13, 0, 0)
			when 7x"1f" => color_index <= 2d"1"; -- (13, 1, 0)
			when 7x"31" => color_index <= 2d"2"; -- (13, 2, 0)
			when 7x"43" => color_index <= 2d"1"; -- (13, 3, 0)
			when 7x"55" => color_index <= 2d"0"; -- (13, 4, 0)
			when 7x"e" => color_index <= 2d"2"; -- (14, 0, 0)
			when 7x"20" => color_index <= 2d"1"; -- (14, 1, 0)
			when 7x"32" => color_index <= 2d"1"; -- (14, 2, 0)
			when 7x"44" => color_index <= 2d"1"; -- (14, 3, 0)
			when 7x"56" => color_index <= 2d"2"; -- (14, 4, 0)
			when 7x"f" => color_index <= 2d"1"; -- (15, 0, 0)
			when 7x"21" => color_index <= 2d"1"; -- (15, 1, 0)
			when 7x"33" => color_index <= 2d"1"; -- (15, 2, 0)
			when 7x"45" => color_index <= 2d"1"; -- (15, 3, 0)
			when 7x"57" => color_index <= 2d"1"; -- (15, 4, 0)
			when 7x"10" => color_index <= 2d"1"; -- (16, 0, 0)
			when 7x"22" => color_index <= 2d"1"; -- (16, 1, 0)
			when 7x"34" => color_index <= 2d"1"; -- (16, 2, 0)
			when 7x"46" => color_index <= 2d"1"; -- (16, 3, 0)
			when 7x"58" => color_index <= 2d"0"; -- (16, 4, 0)
			when 7x"11" => color_index <= 2d"1"; -- (17, 0, 0)
			when 7x"23" => color_index <= 2d"1"; -- (17, 1, 0)
			when 7x"35" => color_index <= 2d"1"; -- (17, 2, 0)
			when 7x"47" => color_index <= 2d"1"; -- (17, 3, 0)
			when 7x"59" => color_index <= 2d"2"; -- (17, 4, 0)
			when others => color_index <= 2d"0";
        end case;

        case color_index is
			when 2d"0" => rgb <= "111111"; -- (3, 3, 3)
			when 2d"1" => rgb <= "000000"; -- (0, 0, 0)
			when 2d"2" => rgb <= "101010"; -- (1, 1, 1)
           when others => rgb <= "000000";
           end case;
	end if;
    end process;
end synth;
